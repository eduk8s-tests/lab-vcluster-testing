apiVersion: training.eduk8s.io/v1alpha2
kind: Workshop
metadata:
  name: lab-vcluster-testing
spec:
  title: Virtual Cluster
  description: Test of running a virtual Kubernetes cluster.
  content:
    files: github.com/eduk8s-tests/lab-vcluster-testing
  session:
    namespaces:
      budget: small
      secondary:
      - name: $(session_namespace)-vc
        role: view
        budget: large
    applications:
      terminal:
        enabled: true
        layout: split
      console:
        enabled: true
        vendor: octant
      docker:
        enabled: true
      registry:
        enabled: true
    objects:
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: vcluster
        namespace: $(session_namespace)-vc
    - kind: Role
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: vcluster
        namespace: $(session_namespace)-vc
      rules:
        - apiGroups: [""]
          resources: ["configmaps", "secrets", "services", "services/proxy", "pods", "pods/proxy", "pods/attach", "pods/portforward", "pods/exec", "pods/log", "events", "endpoints", "persistentvolumeclaims"]
          verbs: ["*"]
        - apiGroups: ["networking.k8s.io"]
          resources: ["ingresses"]
          verbs: ["*"]
        - apiGroups: [""]
          resources: ["namespaces"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["apps"]
          resources: ["statefulsets"]
          verbs: ["get", "list", "watch"]
    - kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: vcluster
        namespace: $(session_namespace)-vc
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: vcluster
      subjects:
        - kind: ServiceAccount
          name: vcluster
    - kind: Role
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: vcluster-connect
        namespace: $(session_namespace)-vc
      rules:
        - apiGroups: [""]
          resources: ["pods/exec"]
          resourceNames: ["vcluster-0"]
          verbs: ["*"]
    - kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: vcluster-connect
        namespace: $(session_namespace)-vc
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: vcluster-connect
      subjects:
        - kind: ServiceAccount
          namespace: $(workshop_namespace)
          name: $(service_account)
    - kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: $(session_namespace)-vc
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: $(workshop_namespace)-anyuid
      subjects:
        - kind: ServiceAccount
          namespace: $(session_namespace)-vc
          name: vcluster
    - apiVersion: v1
      kind: Service
      metadata:
        name: vcluster
        namespace: $(session_namespace)-vc
      spec:
        tYpe: ClusterIP
        ports:
          - name: https
            port: 443
            targetPort: 8443
            protocol: TCP
        selector:
          app: vcluster
    - apiVersion: v1
      kind: Service
      metadata:
        name: vcluster-headless
        namespace: $(session_namespace)-vc
      spec:
        ports:
          - name: https
            port: 443
            targetPort: 8443
            protocol: TCP
        clusterIP: None
        selector:
          app: vcluster
    - apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: vcluster
        namespace: $(session_namespace)-vc
        labels:
          app: vcluster
      spec:
        serviceName: vcluster-headless
        replicas: 1
        selector:
          matchLabels:
            app: vcluster
        template:
          metadata:
            labels:
              app: vcluster
          spec:
            terminationGracePeriodSeconds: 10
            serviceAccountName: vcluster
            containers:
            - image: rancher/k3s:v1.19.5-k3s2
              name: virtual-cluster
              command:
                - "/bin/k3s"
              args:
                - "server"
                - "--write-kubeconfig=/k3s-config/kube-config.yaml"
                - "--data-dir=/data"
                - "--disable=traefik,servicelb,metrics-server,local-storage"
                - "--disable-network-policy"
                - "--disable-agent"
                - "--disable-scheduler"
                - "--disable-cloud-controller"
                - "--flannel-backend=none"
                - "--kube-controller-manager-arg=controllers=*,-nodeipam,-nodelifecycle,-persistentvolume-binder,-attachdetach,-persistentvolume-expander,-cloud-node-lifecycle"  
                - "--service-cidr=10.96.0.0/12"  
              volumeMounts:
                - mountPath: /data
                  name: data
            - name: syncer
              image: "loftsh/virtual-cluster:0.0.27"
              args:
                - --service-name=vcluster
                - --suffix=vc
                - --owning-statefulset=vcluster
                - --out-kube-config-secret=vcluster
                - --tls-san=vcluster.$(session_namespace)-vc.svc.cluster.local
              volumeMounts:
                - mountPath: /data
                  name: data
        volumeClaimTemplates:
          - metadata:
              name: data
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: 5Gi
